// Generated by CoffeeScript 1.6.3
(function() {
  var Renderer;

  window.Renderer = Renderer = (function() {
    function Renderer(canvas_context) {
      this.ctx = canvas_context;
    }

    Renderer.prototype.render = function(world) {
      var player, _i, _len, _ref, _results;
      this.ctx.fillStyle = "#000000";
      this.ctx.font = "15px Helvetica";
      this.ctx.fillRect(0, 0, 800, 600);
      _ref = world.players;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        player = _ref[_i];
        _results.push(this.render_player(player, "#00ff00"));
      }
      return _results;
    };

    Renderer.prototype.render_player = function(player, color) {
      var coordinates, word, _i, _len, _ref, _results;
      this.ctx.fillStyle = color;
      coordinates = {
        x: player.x,
        y: player.y
      };
      _ref = player.words;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        word = _ref[_i];
        _results.push(coordinates = this.render_word(coordinates, word));
      }
      return _results;
    };

    Renderer.prototype.render_word = function(coordinates, word) {
      var char, _i, _len, _ref;
      switch (word.direction) {
        case 'right':
          _ref = word.word;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            char = _ref[_i];
            this.render_character(char, coordinates.x, coordinates.y);
            coordinates.x = coordinates.x + 1;
          }
          return coordinates;
        case 'left':
          break;
        case 'up':
          break;
        case 'down':
      }
    };

    Renderer.prototype.render_character = function(char, x, y) {
      return this.ctx.fillText(char.toUpperCase(), x * 15, y * 15, 15, 15);
    };

    Renderer.prototype.word_check = function(word) {
      return $.inArray(word, window.words_eng) >= 0;
    };

    return Renderer;

  })();

}).call(this);
