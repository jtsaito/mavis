// Generated by CoffeeScript 1.8.0
var Player, World, add_player_to_world, add_word_to_player, app, http, io, update, world;

World = require("./models/world");

Player = require("./models/player");

world = new World;

app = require('express')();

http = require('http').Server(app);

io = require('socket.io')(http);

app.get('/', function(req, res) {
  return res.sendFile(__dirname + '/index.html');
});

app.get('/client.js', function(req, res) {
  return res.sendFile(__dirname + '/client.js');
});

app.get('/renderer.js', function(req, res) {
  return res.sendFile(__dirname + '/renderer.js');
});

app.get('/jquery-1.11.1.min.js', function(req, res) {
  return res.sendFile(__dirname + '/jquery-1.11.1.min.js');
});

io.on('connection', function(socket) {
  socket.on('action', function(action) {
    if (action) {
      update(action);
      return io.emit('world', JSON.stringify(world));
    }
  });
  return socket.on('setPlayer', function(id) {
    add_player_to_world(id);
    return io.emit('world', JSON.stringify(world));
  });
});

http.listen(5555, function() {
  return console.log('listening on *:5555');
});

update = function(action) {
  console.log(action.player_id);
  console.log(action.word);
  switch (action.action) {
    case 'add_word':
      return add_word_to_player(action.player_id, action.word);
  }
};

add_player_to_world = function(id) {
  return world.add_player(new Player(id));
};

add_word_to_player = function(id, word) {
  var player;
  player = (world.players.filter(function(player) {
    return player.id === id;
  }))[0];
  return player.add_word(word.direction, word.word);
};
